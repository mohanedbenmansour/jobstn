{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth.guard.ts","./src/app/components/admin-dashboard/admin-dashboard.component.ts","./src/app/components/admin-dashboard/admin-dashboard.component.html","./src/app/components/applicant-page/applicant-page.component.ts","./src/app/components/applicant-page/applicant-page.component.html","./src/app/components/enterprise-page/enterprise-page.component.ts","./src/app/components/enterprise-page/enterprise-page.component.html","./src/app/components/home-page/home-page.component.ts","./src/app/components/home-page/home-page.component.html","./src/app/components/sign-in/sign-in.component.ts","./src/app/components/sign-in/sign-in.component.html","./src/app/components/sign-up/sign-up.component.ts","./src/app/components/sign-up/sign-up.component.html","./src/app/services/post.service.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SignInComponent } from './components/sign-in/sign-in.component';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { HomePageComponent } from './components/home-page/home-page.component';\nimport { ApplicantPageComponent } from './components/applicant-page/applicant-page.component';\nimport { EnterprisePageComponent } from './components/enterprise-page/enterprise-page.component';\nimport { AdminDashboardComponent } from './components/admin-dashboard/admin-dashboard.component';\nimport { AuthGuard } from './auth/auth.guard';\nconst routes: Routes = [\n  {\n    path: 'signup',\n    component: HomePageComponent,\n    children: [{ path: '', component: SignUpComponent }],\n  },\n  {\n    path: 'signin',\n    component: HomePageComponent,\n    children: [{ path: '', component: SignInComponent }],\n  },\n  { path: '', redirectTo: '/signin', pathMatch: 'full' },\n  {\n    path: 'home',\n    component: ApplicantPageComponent,\n    canActivate: [AuthGuard],\n    data: {\n      role: 'applicant',\n    },\n  },\n  {\n    path: 'enterprise',\n    component: EnterprisePageComponent,\n    canActivate: [AuthGuard],\n    data: {\n      role: 'enterprise',\n    },\n  },\n  {\n    path: 'admindashboard',\n    component: AdminDashboardComponent,\n    canActivate: [AuthGuard],\n    data: {\n      role: 'admin',\n    },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SignInComponent } from './components/sign-in/sign-in.component';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { HomePageComponent } from './components/home-page/home-page.component';\n\nimport { UserService } from './services/user.service';\nimport { PostService } from './services/post.service';\n\nimport { FormsModule } from '@angular/forms';\n\nimport { ApplicantPageComponent } from './components/applicant-page/applicant-page.component';\nimport { EnterprisePageComponent } from './components/enterprise-page/enterprise-page.component';\nimport { AdminDashboardComponent } from './components/admin-dashboard/admin-dashboard.component';\n\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AuthGuard } from './auth/auth.guard';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\n\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SignInComponent,\n    SignUpComponent,\n    HomePageComponent,\n    ApplicantPageComponent,\n    EnterprisePageComponent,\n    AdminDashboardComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    MatChipsModule,\n    NoopAnimationsModule,\n    MatIconModule,\n  ],\n  providers: [\n    PostService,\n    UserService,\n    AuthGuard,\n    { provide: LocationStrategy, useClass: HashLocationStrategy },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  CanActivateChild,\n  CanDeactivate,\n  CanLoad,\n  Route,\n  UrlSegment,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from '../services/user.service';\nimport { Router } from '@angular/router';\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard\n  implements CanActivate, CanActivateChild, CanDeactivate<unknown>, CanLoad {\n  constructor(private userService: UserService, private router: Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    let url: string = state.url;\n    return this.checkUserLogin(next, url);\n  }\n  canActivateChild(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return this.canActivate(next, state);\n  }\n  canDeactivate(\n    component: unknown,\n    currentRoute: ActivatedRouteSnapshot,\n    currentState: RouterStateSnapshot,\n    nextState?: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return true;\n  }\n  canLoad(\n    route: Route,\n    segments: UrlSegment[]\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    return true;\n  }\n\n  checkUserLogin(route: ActivatedRouteSnapshot, url: any): boolean {\n    if (this.userService.isLoggedIn()) {\n      const userRole = this.userService.getRole();\n      if (route.data.role && route.data.role.indexOf(userRole) === -1) {\n        this.router.navigate(['/signin']);\n        return false;\n      }\n      return true;\n    }\n\n    this.router.navigate(['/signin']);\n    return false;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.scss']\n})\nexport class AdminDashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>admin-dashboard works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/shared/user';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../services/user.service';\nimport { PostService } from '../../services/post.service';\nimport { Post } from '../../shared/post';\n@Component({\n  selector: 'app-applicant-page',\n  templateUrl: './applicant-page.component.html',\n  styleUrls: ['./applicant-page.component.scss'],\n})\nexport class ApplicantPageComponent implements OnInit {\n  posts: Post[];\n  constructor(\n    private userService: UserService,\n    private router: Router,\n    private postService: PostService\n  ) {}\n\n  ngOnInit(): void {\n    this.readPosts();\n  }\n  logout() {\n    this.userService.deleteEmail();\n    this.userService.deleteRole();\n    this.userService.deleteToken();\n    this.router.navigateByUrl('/signin');\n  }\n  readPosts() {\n    this.postService.getPosts().subscribe(\n      (data) => {\n        console.log(data);\n        this.posts = data['msg'];\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light cont\">\n  <button class=\"btn btn-danger ml-auto\" (click)=\"logout()\">\n    logout\n  </button>\n</nav>\n<link\n  href=\"//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css\"\n  rel=\"stylesheet\"\n  id=\"bootstrap-css\"\n/>\n<script src=\"//netdna.bootstrapcdn.com/bootstrap/3.0.0/js/bootstrap.min.js\"></script>\n<script src=\"//code.jquery.com/jquery-1.11.1.min.js\"></script>\n\n<div class=\"container\" *ngFor=\"let post of posts\">\n  <div class=\"row\">\n    <div class=\"col-xs-12 col-sm-8 col-md-8\">\n      <div class=\"well well-sm\">\n        <div class=\"row\">\n          <div class=\"col-sm-6 col-md-4\">\n            <img\n              src=\"{{ post.image }}\"\n              alt=\"\"\n              class=\"img-rounded img-responsive\"\n            />\n          </div>\n          <div class=\"col-sm-6 col-md-8\">\n            <h4>\n              {{ post.title }}\n            </h4>\n            <small\n              ><cite title=\"{{ post.address }}\"\n                >{{ post.address }}\n                <i class=\"glyphicon glyphicon-map-marker\"> </i></cite\n            ></small>\n            <p>\n              <i class=\"glyphicon glyphicon-envelope\"></i>{{ post.email }}\n              <br />\n              <i class=\"glyphicon glyphicon-globe\"></i>{{ post.enterprise }}\n              <br />\n              <i class=\"glyphicon glyphicon-gift\"></i>{{ post.date }}\n            </p>\n            <p>\n              <strong> Description:</strong>\n              {{ post.description }}\n            </p>\n            <!-- Split button -->\n            <div class=\"btn-group\">\n              <button type=\"button\" class=\"btn btn-primary\">\n                see more\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { PostService } from '../../services/post.service';\nimport { NgForm, FormGroup, FormControl } from '@angular/forms';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { Post } from 'src/app/shared/post';\nimport { title } from 'process';\nimport { UserService } from '../../services/user.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-enterprise-page',\n  templateUrl: './enterprise-page.component.html',\n  styleUrls: ['./enterprise-page.component.scss'],\n})\nexport class EnterprisePageComponent implements OnInit {\n  newPost: Post;\n  postToSend: any;\n\n  constructor(\n    public postService: PostService,\n    private userService: UserService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {}\n  //@ViewChild('image', { static: false })\n  image: File = null;\n  onFileChanged(event) {\n    this.image = <File>event.target.files[0];\n    console.log(this.image);\n  }\n\n  toFormData<T>(formValue: T) {\n    const formData = new FormData();\n\n    for (const key of Object.keys(formValue)) {\n      const value = formValue[key];\n      formData.append(key, value);\n    }\n\n    return formData;\n  }\n\n  onSubmit(form: NgForm) {\n    const formData = new FormData();\n    const today = new Date();\n    formData.append('image', this.image);\n\n    formData.append('title', form.value.title);\n    formData.append('enterprise', form.value.enterprise);\n    formData.append('type', form.value.type);\n    formData.append('address', form.value.address);\n    formData.append('date', today.toISOString());\n    formData.append('salary', form.value.salary);\n    formData.append('experience', form.value.experience);\n    formData.append('description', form.value.description);\n    formData.append('email', this.userService.getEmail());\n    formData.append('tags', form.value.tags);\n\n    this.postService.createPost(formData).subscribe(\n      (data) => {\n        console.log(data);\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n  logout() {\n    this.userService.deleteEmail();\n    this.userService.deleteRole();\n    this.userService.deleteToken();\n    this.router.navigateByUrl('/signin');\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light cont\">\n  <button class=\"btn btn-danger ml-auto\" (click)=\"logout()\">\n    logout\n  </button>\n</nav>\n<div class=\"wrapper\">\n  <div id=\"formContent\">\n    <h1 class=\"header-tag\">Add Post</h1>\n    <form\n      #addPostForm=\"ngForm\"\n      (ngSubmit)=\"addPostForm.valid && onSubmit(addPostForm)\"\n    >\n      <div class=\"d-flex justify-content-center\">\n        <div>\n          <input\n            type=\"text\"\n            #title=\"ngModel\"\n            [(ngModel)]=\"postService.selectedPost.title\"\n            name=\"title\"\n            placeholder=\"Title\"\n            required\n          />\n          <input\n            type=\"text\"\n            #enterprise=\"ngModel\"\n            [(ngModel)]=\"postService.selectedPost.enterprise\"\n            name=\"enterprise\"\n            placeholder=\"Enterprise name\"\n            required\n          />\n          <input\n            type=\"text\"\n            #type=\"ngModel\"\n            [(ngModel)]=\"postService.selectedPost.type\"\n            name=\"type\"\n            placeholder=\"Type\"\n            required\n          />\n          <input\n            type=\"text\"\n            #address=\"ngModel\"\n            [(ngModel)]=\"postService.selectedPost.address\"\n            name=\"address\"\n            placeholder=\"address\"\n            required\n          />\n          <input\n            type=\"text\"\n            #salary=\"ngModel\"\n            [(ngModel)]=\"postService.selectedPost.salary\"\n            name=\"salary\"\n            placeholder=\"salary\"\n            required\n          />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            #experience=\"ngModel\"\n            [(ngModel)]=\"postService.selectedPost.experience\"\n            name=\"experience\"\n            placeholder=\"Experience\"\n            required\n          />\n          <input\n            type=\"text\"\n            #description=\"ngModel\"\n            [(ngModel)]=\"postService.selectedPost.description\"\n            name=\"description\"\n            placeholder=\"Description\"\n            required\n          />\n\n          <input\n            type=\"text\"\n            #tags=\"ngModel\"\n            [(ngModel)]=\"postService.selectedPost.tags\"\n            name=\"tags\"\n            placeholder=\"Tags\"\n            required\n          />\n          <div class=\"button-wrap mt-3\">\n            <label class=\"new-button\" for=\"upload\">upload image</label>\n            <input\n              id=\"upload\"\n              (change)=\"onFileChanged($event)\"\n              #fileInput\n              type=\"file\"\n            />\n          </div>\n        </div>\n      </div>\n\n      <input type=\"submit\" value=\"Add Post\" />\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.scss'],\n})\nexport class HomePageComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"wrapper\">\n  <div id=\"formContent\">\n    <h2\n      class=\"underlineHover\"\n      routerLink=\"/signin\"\n      routerLinkActive=\"active\"\n      class=\"mr-3\"\n    >\n      Sign In\n    </h2>\n    <h2 class=\"underlineHover\" routerLink=\"/signup\" routerLinkActive=\"active\">\n      Sign Up\n    </h2>\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../shared/user';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../services/user.service';\nimport { NgForm } from '@angular/forms';\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.scss'],\n})\nexport class SignInComponent implements OnInit {\n  userModel = {\n    email: '',\n    password: '',\n  };\n  constructor(public userService: UserService, private router: Router) {}\n\n  emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  showSuccessMessage: boolean;\n  serverErrorMessages: string;\n\n  ngOnInit(): void {\n    if (this.userService.isLoggedIn()) this.router.navigate(['/home']);\n  }\n  onSubmit(form: NgForm) {\n    this.userService.login(form.value).subscribe(\n      (res) => {\n        console.log(res['data'].role);\n        this.userService.setToken(res['accessToken']);\n        this.userService.setRole(res['data'].role);\n        this.userService.setEmail(res['data'].email);\n        this.goToDashboard();\n      },\n      (err) => {\n        this.serverErrorMessages = err.error.message;\n      }\n    );\n  }\n  goToDashboard() {\n    let role = this.userService.getRole();\n    if (role == 'admin') this.router.navigateByUrl('/admindashboard');\n    if (role == 'enterprise') this.router.navigateByUrl('/enterprise');\n    if (role == 'applicant') this.router.navigateByUrl('/home');\n  }\n}\n","<form\n  #signInForm=\"ngForm\"\n  (ngSubmit)=\"signInForm.valid && onSubmit(signInForm)\"\n>\n  <input\n    type=\"text\"\n    name=\"email\"\n    #email=\"ngModel\"\n    [(ngModel)]=\"userModel.email\"\n    placeholder=\"Email\"\n    [pattern]=\"emailRegex\"\n    required\n    [ngClass]=\"{ 'invalid-textbox': signInForm.submitted && !email.valid }\"\n  />\n  <div *ngIf=\"signInForm.submitted && email.errors?.pattern\">\n    <label class=\"validation-message\">Invalid email address.</label>\n  </div>\n  <input\n    type=\"password\"\n    name=\"password\"\n    #password=\"ngModel\"\n    [(ngModel)]=\"userModel.password\"\n    placeholder=\"Password\"\n    required\n    minlength=\"4\"\n    [ngClass]=\"{ 'invalid-textbox': signInForm.submitted && !password.valid }\"\n  />\n  <div *ngIf=\"signInForm.submitted && password.errors?.minlength\">\n    <label class=\"validation-message\">Minimum 4 characters.</label>\n  </div>\n  <input type=\"submit\" value=\"Sign In\" />\n</form>\n<!-- Error message -->\n<div class=\"alert\" *ngIf=\"serverErrorMessages\">\n  {{ serverErrorMessages }}\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../services/user.service';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss'],\n})\nexport class SignUpComponent implements OnInit {\n  emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  showSuccessMessage: boolean;\n  serverErrorMessages: string;\n\n  ngOnInit(): void {}\n  constructor(public userService: UserService, private router: Router) {}\n\n  onSubmit(form: NgForm) {\n    this.userService.createUser(form.value).subscribe(\n      (data) => {\n        console.log(form.value);\n        this.showSuccessMessage = true;\n        console.log(form.value);\n        setTimeout(() => (this.showSuccessMessage = false), 4000);\n        this.resetForm(form);\n      },\n      (err) => {\n        console.log(form.value);\n        this.serverErrorMessages = 'Something went wrong.Please contact admin.';\n      }\n    );\n  }\n  resetForm(form: NgForm) {\n    form.resetForm();\n    this.serverErrorMessages = '';\n  }\n}\n","<form\n  #signUpForm=\"ngForm\"\n  (ngSubmit)=\"signUpForm.valid && onSubmit(signUpForm)\"\n>\n  <input\n    type=\"text\"\n    #name=\"ngModel\"\n    [(ngModel)]=\"userService.selectedUser.name\"\n    name=\"name\"\n    placeholder=\"Full Name\"\n    required\n    [ngClass]=\"{ 'invalid-textbox': signUpForm.submitted && !name.valid }\"\n  />\n  <div *ngIf=\"signUpForm.submitted && !name.valid\">\n    <label class=\"validation-message\">This field is required.</label>\n  </div>\n  <input\n    type=\"text\"\n    #email=\"ngModel\"\n    [(ngModel)]=\"userService.selectedUser.email\"\n    name=\"email\"\n    placeholder=\"Email\"\n    required\n    [pattern]=\"emailRegex\"\n    [ngClass]=\"{ 'invalid-textbox': signUpForm.submitted && !email.valid }\"\n  />\n  <div *ngIf=\"signUpForm.submitted && email.errors\">\n    <label *ngIf=\"email.errors.required\" class=\"validation-message\"\n      >This field is required.</label\n    >\n    <label *ngIf=\"email.errors.pattern\" class=\"validation-message\"\n      >Invalid email address.</label\n    >\n  </div>\n  <input\n    type=\"password\"\n    #password=\"ngModel\"\n    [(ngModel)]=\"userService.selectedUser.password\"\n    name=\"password\"\n    placeholder=\"Password\"\n    minlength=\"4\"\n    required\n    [ngClass]=\"{ 'invalid-textbox': signUpForm.submitted && !password.valid }\"\n  />\n  <div *ngIf=\"signUpForm.submitted && password.errors\">\n    <label *ngIf=\"password.errors.required\" class=\"validation-message\"\n      >This field is required.</label\n    >\n    <label *ngIf=\"password.errors.minlength\" class=\"validation-message\"\n      >Enter atleast 4 characters.</label\n    >\n  </div>\n  <div>\n    <p>\n      <input\n        type=\"radio\"\n        id=\"test1\"\n        name=\"role\"\n        #role=\"ngModel\"\n        value=\"applicant\"\n        [(ngModel)]=\"userService.selectedUser.role\"\n        checked\n      />\n      <label for=\"test1\">Applicant</label>\n    </p>\n    <p>\n      <input\n        type=\"radio\"\n        id=\"test2\"\n        name=\"role\"\n        #role=\"ngModel\"\n        value=\"enterprise\"\n        [(ngModel)]=\"userService.selectedUser.role\"\n      />\n      <label for=\"test2\">Enterprise</label>\n    </p>\n  </div>\n\n  <input type=\"submit\" value=\"Sign Up\" />\n</form>\n\n<!-- Success message -->\n<div class=\"success\" *ngIf=\"showSuccessMessage\">\n  Saved successfully\n</div>\n\n<!-- Error message -->\n<div class=\"alert\" *ngIf=\"serverErrorMessages\">\n  {{ serverErrorMessages }}\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Post } from '../shared/post';\n@Injectable({\n  providedIn: 'root',\n})\nexport class PostService {\n  public posts: Post[];\n  selectedPost: Post = {\n    title: '',\n    enterprise: '',\n    type: '',\n    address: '',\n    date: new Date(),\n    image: '',\n    salary: null,\n    experience: '',\n    description: '',\n    email: '',\n    tags: '',\n  };\n  constructor(private http: HttpClient) {}\n  createPost(post: FormData) {\n    return this.http.post('addpost', post);\n  }\n  getPosts() {\n    return this.http.get('getAllposts/');\n  }\n  deletePost(id: string) {\n    return this.http.delete('deletepost/' + id);\n  }\n  testPost(image: FormData) {\n    return this.http.post('addpost', image);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../shared/user';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  selectedUser: User = {\n    name: '',\n    email: '',\n    password: '',\n    role: '',\n  };\n  noAuthHeader = { headers: new HttpHeaders({ NoAuth: 'True' }) };\n  constructor(private http: HttpClient) {}\n  createUser(user: User) {\n    return this.http.post('signup', user);\n  }\n  login(authCredentials) {\n    return this.http.post('login', authCredentials, this.noAuthHeader);\n  }\n\n  getUserProfile() {\n    return this.http.get('getuser');\n  }\n  //token field\n  setToken(token: string) {\n    localStorage.setItem('token', token);\n  }\n\n  getToken() {\n    return localStorage.getItem('token');\n  }\n\n  deleteToken() {\n    localStorage.removeItem('token');\n  }\n  //role field\n  setRole(role: string) {\n    localStorage.setItem('ROLE', role);\n  }\n  getRole() {\n    return localStorage.getItem('ROLE');\n  }\n  deleteRole() {\n    localStorage.removeItem('ROLE');\n  }\n  getUserPayload() {\n    let token = this.getToken();\n    if (token) {\n      let userPayload = atob(token.split('.')[1]);\n      return JSON.parse(userPayload);\n    } else return null;\n  }\n  //email field\n  setEmail(email: string) {\n    localStorage.setItem('Email', email);\n  }\n  getEmail() {\n    return localStorage.getItem('Email');\n  }\n  deleteEmail() {\n    localStorage.removeItem('Email');\n  }\n  isLoggedIn() {\n    let userPayload = this.getUserPayload();\n    if (userPayload) return userPayload.exp > Date.now() / 1000;\n    else return false;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}